define(["require","exports","../utils/commonutils","ojs/ojarraydataprovider","knockout","ojs/ojconverter-number","ojs/ojtable","ojs/ojchart","ojs/ojgauge","ojs/ojavatar"],(function(require,e,t,a,s,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(){this.numberConverter=new r.IntlNumberConverter({style:"currency",currency:"USD",maximumFractionDigits:0}),this.tallyUrl="https://fopfpl.in/tes/api/veg_tally",this.fplBaseUrl="https://fantasy.premierleague.com/api/",this.bonusCandidateUrl="https://fopfpl.in/tes/api/bonus_candidate/",this.chipTableList=s.observableArray([]),this.chipDataProvider=s.observable(),this.transferTableList=s.observableArray([]),this.transferDataProvider=s.observable(),this.hitTableList=s.observableArray([]),this.hitDataProvider=s.observable(),this.mostFPLTransferredIn=s.observable(),this.mostFPLCaptained=s.observable(),this.mostFPLTransferredOut=s.observable(),this.mostAOETransferredIn=s.observable(),this.mostAoeCaptained=s.observable(),this.mostAoeCaptainedNo=s.observable(0),this.mostAOETransferredOut=s.observable(),this.mostAOETransferredOutPic=s.observable(),this.mostAOETransferredInPic=s.observable(),this.aoePlayerMap=new Map,this.aoeTeams=[],this.curr_gw=1,this.gwTransInMap=new Map,this.gwTransOutMap=new Map,this.gwCapsMap=new Map,this.gwCapInfo=s.observable(),this.captainMap=new Map,this.aoeGwPlayerTransfers=new Map,this.loadTransTable=s.observable(!1),this.playerChipMap=new Map,this.codeMap=new Map,this.playerCaptainMap=new Map,this.playerViceCaptainMap=new Map,this.playerRankMap=new Map,this.playerPicksMap=new Map,this.aoeFplTeamAvgMap=new Map,this.aoeLiveScoreMap=new Map,this.bonusPlayerMap=new Map,this.bonusTeamMap=new Map,this.bonusTeamTableList=s.observableArray([]),this.bonusTeamDataProvider=s.observable(),this.bonusPlayerTableList=s.observableArray([]),this.bonusPlayerDataProvider=s.observable(),this.thresholdValues=[{max:10},{max:30},{}],this.mostAoeCappedList=s.observableArray([]),this.mostAoeCappedDataProvider=s.observable(),this.onLoadTransferTable=e=>{this.transferTableList.removeAll();for(let e of Array.from(this.aoeGwPlayerTransfers.entries())){let a=this.playerRankMap.get(e[0]).total_points,s=this.aoeLiveScoreMap.get(this.aoePlayerMap.get(e[0])),r=a.valueOf();t.default.finished||s&&(r+=s.valueOf());let i={player:e[0],info:e[1],chip:this.playerChipMap.get(e[0]),captain:this.playerCaptainMap.get(e[0]),vicecaptain:this.playerViceCaptainMap.get(e[0]),rank:this.playerRankMap.get(e[0]).overall_rank,hits:this.playerRankMap.get(e[0]).event_transfers_cost/4,tv:this.playerRankMap.get(e[0]).value/10,points:a,livepoints:s};this.transferTableList.push(i)}this.transferTableList.sort((e,t)=>e.rank<t.rank?-1:e.rank>t.rank?1:0),this.transferDataProvider(new a(this.transferTableList)),this.chipDataProvider(new a(this.chipTableList));var s=new Map([...this.gwTransOutMap.entries()].sort((function(e,t){return e[1]>t[1]?-1:e[1]<t[1]?1:0}))),r=new Map([...this.gwTransInMap.entries()].sort((function(e,t){return e[1]>t[1]?-1:e[1]<t[1]?1:0})));this.mostAOETransferredOut(s.keys().next().value),this.mostAOETransferredIn(r.keys().next().value);var i=new Map([...this.gwCapsMap.entries()].sort((function(e,t){return e[1]>t[1]?-1:e[1]<t[1]?1:0})));let n="",o=0;for(let e of Array.from(i.entries())){o+=1,1===o&&(this.mostAoeCaptained=e[0],this.mostAoeCaptainedNo=e[1]);let t=e[0],a=e[1];n=n+t+":"+a+",";let s={name:t,count:a,group:"Captain"};this.mostAoeCappedList.push(s)}this.gwCapInfo(n.substring(0,n.length-1));let h="https://resources.premierleague.com/premierleague/photos/players/110x140/p",l=this.codeMap.get(this.mostAOETransferredOut()),p=h+""+l+".png";this.mostAOETransferredOutPic(p),l=this.codeMap.get(this.mostAOETransferredIn()),p=h+""+l+".png",this.mostAOETransferredInPic(p),this.loadTransTable(!0),this.mostAoeCappedDataProvider(new a(this.mostAoeCappedList))};const e=[],i=t.default.fetchFPLPlayers(),n=this.fetchFplChipCounts(),o=t.default.fetchAoeTeams(),h=this.fetchAoeScores(),l=t.default.fetchCurrGW();this.fetchFplHits(),e.push(i),e.push(n),e.push(o),e.push(h),e.push(l),Promise.all(e).then(e=>{this.curr_gw=t.default.curr_gw,this.fetchBonusTable();for(let e of Array.from(this.aoePlayerMap.entries())){let t=e[0],a=e[1];const s=[],r=this.fetchPicks(a,t),i=this.fetchTransfers(a);s.push(r),s.push(i),r.then(e=>{i.then(e=>{let a=e,s="",r="";for(let e of Array.from(a.entries())){console.log("transMap");let t=e[0],a=e[1];if(s=""===s?t:s+", "+t,r=""===r?a:r+", "+a,this.gwTransInMap.has(t)){let e=this.gwTransInMap.get(t);this.gwTransInMap.set(t,e+1)}else this.gwTransInMap.set(t,1);if(this.gwTransOutMap.has(a)){let e=this.gwTransOutMap.get(a);this.gwTransOutMap.set(a,e+1)}else this.gwTransOutMap.set(a,1)}this.aoeGwPlayerTransfers.set(t,"Transfers IN : "+s+", Transfers OUT : "+r)}).catch(e=>{this.aoeGwPlayerTransfers.set(t,"NA")})}),this.aoeGwPlayerTransfers.get(t)||this.aoeGwPlayerTransfers.set(t,"NA")}}),setTimeout(()=>{this.onLoadTransferTable(null)},3e3)}fetchAoeFPLTeamAvgs(){for(let e of Array.from(this.aoePlayerMap.entries())){let t=e[0];e[1],t.substring(0,t.indexOf("(")-1),t.substring(t.indexOf("("),t.length-2)}}fetchTransfers(e){return new Promise((a,s)=>{let r=new Map;fetch("https://fantasy.premierleague.com/api/entry/"+e+"/transfers/").then(e=>e.json()).then(e=>{e.forEach(e=>{e.event===this.curr_gw&&(this.codeMap.set(t.default.fplPlayerMap.get(e.element_in).web_name,t.default.fplPlayerMap.get(e.element_in).code),this.codeMap.set(t.default.fplPlayerMap.get(e.element_out).web_name,t.default.fplPlayerMap.get(e.element_out).code),r.set(t.default.fplPlayerMap.get(e.element_in).web_name,t.default.fplPlayerMap.get(e.element_out).web_name)),a(r)})}).catch(e=>{s(r)})})}fetchPicks(e,a){return new Promise(s=>{let r="https://fantasy.premierleague.com/api/entry/"+e+"/event/"+this.curr_gw+"/picks/";fetch(r).then(e=>e.json()).then(r=>{const i=r;i.active_chip&&this.playerChipMap.set(a,i.active_chip),this.playerPicksMap.set(e,i.picks),i.picks.forEach(e=>{if(e.is_captain){let s=t.default.fplPlayerMap.get(e.element).web_name;if(this.playerCaptainMap.set(a,s),this.gwCapsMap.has(s)){let e=this.gwCapsMap.get(s);this.gwCapsMap.set(s,e+1)}else this.gwCapsMap.set(s,1)}else e.is_vice_captain&&this.playerViceCaptainMap.set(a,t.default.fplPlayerMap.get(e.element).web_name)}),this.playerRankMap.set(a,i.entry_history),s(!0)})})}fetchFplChipCounts(){return new Promise(e=>{let a=t.default.fetchAoeTeams();const s=[];a.then(a=>{a.forEach(a=>{let r=0,i=0,n=0,o=0;a.players.forEach(e=>{this.aoePlayerMap.set(e.first_name+" "+e.last_name+" ("+t.default.fetchTeamName(a.id)+" )",e.fpl_id);let h=t.default.fetchFplMgrHistory(e.fpl_id);s.push(h),h.then(e=>{let t=e.chips;t.length>0&&t.forEach(e=>{"wildcard"===e.name?r+=1:"3xc"===e.name?o+=1:"freehit"===e.name?i+=1:"bboost"===e.name&&(n+=1)})})}),Promise.all(s).then(s=>{let h="WCs Used :: "+r+", TCs Used :: "+o+", FHs Used :: "+i+" BBs Used :: "+n,l={team:t.default.fetchTeamName(a.id),info:h};this.chipTableList.push(l),e(!0)})})})})}fetchFplHits(){let e=t.default.fetchAoeTeams();const s=[];e.then(e=>{e.forEach(e=>{e.players.forEach(a=>{let r=t.default.fetchFplMgrHistory(a.fpl_id);s.push(r),r.then(s=>{let r=s.current;if(r.length>0){let s=0;r.forEach(e=>{s+=e.event_transfers_cost});let i={player:a.first_name+" "+a.last_name,cost:s,team:t.default.fetchTeamName(e.id)};this.hitTableList.push(i)}})})}),Promise.all(s).then(e=>{this.hitTableList.sort((e,t)=>e.cost>t.cost?-1:e.cost<t.cost?1:0),this.hitDataProvider(new a(this.hitTableList))})})}fetchAoeScores(){fetch("http://fopfpl.in/tes/api/game_week/scores").then(e=>e.json()).then(e=>{new Map;e.forEach(e=>{e.forEach(e=>{JSON.parse(e.details).forEach(e=>{this.aoeLiveScoreMap.has(e.fpl_id)||this.aoeLiveScoreMap.set(e.fpl_id,e.score)})})})})}fetchBonusTable(){let e=[],t=0;for(t=1;t<=this.curr_gw;t++){const a=this.fetchBonusPerWeek(t);e.push(a),a.then(e=>{e.forEach(e=>{if(this.bonusPlayerMap.has(e.name)){let t=this.bonusPlayerMap.get(e.name);this.bonusPlayerMap.set(e.name,t+1)}else this.bonusPlayerMap.set(e.name,1);if(this.bonusTeamMap.has(e.team)){let t=this.bonusTeamMap.get(e.team);this.bonusTeamMap.set(e.team,t+1)}else this.bonusTeamMap.set(e.team,1)})})}Promise.all(e).then(e=>{var t=new Map([...this.bonusTeamMap.entries()].sort((function(e,t){return e[1]>t[1]?-1:e[1]<t[1]?1:0}))),s=new Map([...this.bonusPlayerMap.entries()].sort((function(e,t){return e[1]>t[1]?-1:e[1]<t[1]?1:0})));for(let e of Array.from(s.entries())){let t={player:e[0],count:e[1]};this.bonusPlayerTableList.push(t)}for(let e of Array.from(t.entries())){let t={team:e[0],count:e[1]};this.bonusTeamTableList.push(t)}this.bonusPlayerDataProvider(new a(this.bonusPlayerTableList)),this.bonusTeamDataProvider(new a(this.bonusTeamTableList))})}fetchBonusPerWeek(e){return new Promise(t=>{fetch(this.bonusCandidateUrl+e).then(e=>e.json()).then(e=>{t(e)})})}}}));