define(["require","exports","../utils/commonutils","ojs/ojarraydataprovider","knockout","ojs/ojtable","ojs/ojchart"],(function(require,e,t,a,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(){this.capQuotaObservableArray=s.observableArray([]),this.capQuotaObservable=s.observable(),this.playersPlayedObservableArray=s.observableArray([]),this.playersPlayedObservable=s.observable(),this.vegTallyTableList=s.observableArray([]),this.chartObservableArray=s.observableArray([]),this.chartObservable=s.observable(),this.tallyUrl="https://fopfpl.in/aoe/api/veg_tally",this.curr_gw=1,this.eoTableList=s.observableArray([]),this.eoDataProvider=s.observable(),this.aoePlayerMap=new Map,this.chipTableList=s.observableArray([]),this.chipDataProvider=s.observable();t.default.fetchCurrGW().then(e=>{this.curr_gw=e,this.fetchAoeEO(this.curr_gw),this.vegTallyDataProvider=s.observable(new a(this.vegTallyTableList));let t=1;for(;t<=10;t++)this.fetchTeamVegTally(this.curr_gw,t)});this.fetchFplChipCounts().then(e=>{this.chipDataProvider(new a(this.chipTableList))}),this.fetchCapQuota()}fetcheo(e,t){return new Promise(a=>{fetch(e).then(e=>e.json()).then(e=>{e.forEach(e=>{if(t.get(e.name)){let a=t.get(e.name);a+=e.count,t.set(e.name,a)}else t.set(e.name,e.count)}),a(e)})})}fetchCapQuota(){fetch("https://fopfpl.in/aoe/api/game_week/scores/").then(e=>e.json()).then(e=>{const s=e;let r=new Map,l=new Map,i=new Map;s.forEach(e=>{let t=0;for(;t<10;t++){let a=r.get(t),s=l.get(t),n=i.get(t);if(a||(a=new Map),s||(s=new Map),n||(n=new Map),a.has(e[t].captain.first_name)){let s=a.get(e[t].captain.first_name);s+=1,a.set(e[t].captain.first_name,s)}else a.set(e[t].captain.first_name,1);if(s.has(e[t].substitute.first_name)){let a=s.get(e[t].substitute.first_name);a+=1,s.set(e[t].substitute.first_name,a)}else s.set(e[t].substitute.first_name,1);if(n.has(e[t].vice_captain.first_name)){let a=n.get(e[t].vice_captain.first_name);a+=1,n.set(e[t].vice_captain.first_name,a)}else n.set(e[t].vice_captain.first_name,1);r.set(t,a),l.set(t,s),i.set(t,n)}});let n=0;for(;n<10;n++){let e="";for(let t of Array.from(r.get(n).entries())){e=e+t[0]+":"+t[1]+","}let a="";for(let e of Array.from(l.get(n).entries())){a=a+e[0]+":"+e[1]+","}let s="";for(let e of Array.from(i.get(n).entries())){s=s+e[0]+":"+e[1]+","}e.endsWith(",")&&(e=e.substring(0,e.length-1)),a.endsWith(",")&&(a=a.substring(0,a.length-1)),s.endsWith(",")&&(s=s.substring(0,s.length-1));var h={teamName:t.default.fetchTeamName(n+1),capQuota:e,subQuota:a,vcCount:s};this.capQuotaObservableArray.push(h)}this.capQuotaObservable(new a(this.capQuotaObservableArray))})}fetchTeamVegTally(e,s){let r=this.tallyUrl+"/"+e+"/"+s;fetch(r).then(e=>e.json()).then(e=>{const r=e;let l=0,i=0,n=0,h=new Map;r.forEach(e=>{0!==e.score?l+=e.count:(i+=e.count,h.set(e.name,e.count)),n+=e.count,this.vegTallyTableList().push(e)});let o="";for(let e of Array.from(h.entries())){o=o+e[0]+":"+e[1]+","}o.endsWith(",")&&(o=o.substring(0,o.length-1));let c=t.default.fetchTeamName(s);var b={team:s,teamName:c,playersPlayed:l,playersRemaining:i,totalPlayers:n,remainingPlayerData:o},f={id:s,group:"Players Played",value:l,series:c},p={id:s,group:"Players Remaining",value:i,series:c};this.chartObservableArray.push(f),this.chartObservableArray.push(p),this.playersPlayedObservableArray.push(b),this.playersPlayedObservableArray.sort((e,t)=>e.playersRemaining>t.playersRemaining?-1:e.playersRemaining<t.playersRemaining?1:0),this.vegTallyDataProvider(new a(this.vegTallyTableList)),this.playersPlayedObservable(new a(this.playersPlayedObservableArray)),this.chartObservable(new a(this.chartObservableArray))})}fetchAoeEO(e){let s=new Map;const r=[];for(let t=1;t<=10;t++){let a=this.tallyUrl+"/"+e+"/"+t;r.push(this.fetcheo(a,s))}Promise.all(r).then(e=>{for(let e of Array.from(s.entries())){let a=e[0],s=e[1],r=s/60*100,l={player:a,count:s,percent:t.default.roundToTwo(r)};this.eoTableList.push(l)}this.eoTableList.sort((e,t)=>e.percent>t.percent?-1:e.percent<t.percent?1:0),this.eoDataProvider(new a(this.eoTableList))})}fetchFplChipCounts(){return new Promise(e=>{let a=t.default.fetchAoeTeams();const s=[];a.then(a=>{a.forEach(a=>{let r=0,l=0,i=0,n=0;a.players.forEach(e=>{this.aoePlayerMap.set(e.first_name+" "+e.last_name+" ("+t.default.fetchTeamName(a.id)+" )",e.fpl_id);let h=t.default.fetchFplMgrHistory(e.fpl_id);s.push(h),h.then(e=>{let t=e.chips;t.length>0&&t.forEach(e=>{"wildcard"===e.name?r+=1:"3xc"===e.name?n+=1:"freehit"===e.name?l+=1:"bboost"===e.name&&(i+=1)})})}),Promise.all(s).then(s=>{let h="WCs Used :: "+r+", TCs Used :: "+n+", FHs Used :: "+l+" BBs Used :: "+i,o={team:t.default.fetchTeamName(a.id),info:h};this.chipTableList.push(o),e(!0)})})})})}connected(){}disconnected(){}transitionCompleted(){}}}));